# Используем многоэтапную сборку для минимизации размера итогового образа

# Этап сборки
FROM python:3.11-slim as builder

# Установка зависимостей для компиляции
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc python3-dev libpq-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Установка зависимостей Python
WORKDIR /usr/src/app
COPY requirements.txt .

# Сборка wheel-файлов для зависимостей
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# Этап финального образа
FROM python:3.11-slim

# Создание непривилегированного пользователя для повышения безопасности
RUN groupadd -r app && useradd -r -g app app

# Установка системных зависимостей
RUN apt-get update && \
    apt-get install -y --no-install-recommends libpq5 curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Копирование wheel-файлов и установка зависимостей
WORKDIR /app
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/* 

# Проверка установки ключевых зависимостей
RUN pip list | grep gunicorn && pip list | grep psycopg2

# Копирование кода приложения
COPY . /app/

# Создание директорий для статических и медиа файлов с правильными разрешениями
RUN mkdir -p /app/staticfiles /app/media && \
    chown -R app:app /app

# Переключаемся на непривилегированного пользователя
USER app

# Экспозиция порта для Gunicorn
EXPOSE 8000

# Добавляем скрипт энтрипоинта для запуска с правильными параметрами
COPY --chown=app:app ./entrypoint.prod.sh /app/entrypoint.prod.sh
RUN chmod +x /app/entrypoint.prod.sh

ENTRYPOINT ["/app/entrypoint.prod.sh"]
