name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # –†–∞–∑—Ä–µ—à–∏—Ç—å —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ workflow

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run tests
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
          python -m pytest --cov=accounts --cov=invitations --cov=companies --cov=teams --cov=reviews --cov=perfecto
          echo "‚úÖ –¢–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!"

  deploy:
    name: Deploy to Production
    needs: test  # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Setup Docker context for remote access
        run: |
          # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é SSH –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ host key
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          
          echo "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞..."
          docker context create remote --docker "host=ssh://${SSH_USER}@${IP}" --description "Remote Docker context for production"
          docker context use remote
          echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          IP: ${{ secrets.IP }}
      
      - name: Copy nginx configuration to remote server
        run: |
          echo "üìÇ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
     
          # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
          ssh ${SSH_USER}@${IP} "mkdir -p ~/nginx_config"
          
          # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ - –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –º—ã –∫–æ–ø–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª, –∞ –Ω–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          scp nginx/nginx.conf ${SSH_USER}@${IP}:~/nginx_config/default.conf

          
          echo "‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ ~/nginx_config/default.conf"

        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          IP: ${{ secrets.IP }}
      
      - name: Decode and create environment file
        run: |
          echo "üîê –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
          echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > .env.prod
          # –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ (–±–µ–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
          echo "‚úÖ –§–∞–π–ª .env.prod —Å–æ–∑–¥–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º:"
          echo "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(wc -c < .env.prod) –±–∞–π—Ç"
          echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: $(grep -c '=' .env.prod)"
          # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–±–µ–∑ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
          grep -q "POSTGRES_DB=" .env.prod && echo "‚úì POSTGRES_DB –Ω–∞–π–¥–µ–Ω" || echo "‚ùå POSTGRES_DB –Ω–µ –Ω–∞–π–¥–µ–Ω"
          grep -q "POSTGRES_USER=" .env.prod && echo "‚úì POSTGRES_USER –Ω–∞–π–¥–µ–Ω" || echo "‚ùå POSTGRES_USER –Ω–µ –Ω–∞–π–¥–µ–Ω" 
          grep -q "POSTGRES_PASSWORD=" .env.prod && echo "‚úì POSTGRES_PASSWORD –Ω–∞–π–¥–µ–Ω" || echo "‚ùå POSTGRES_PASSWORD –Ω–µ –Ω–∞–π–¥–µ–Ω"
      
      - name: Export environment variables
        run: |
          echo "üîÑ –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.prod..."
          
          # –î–æ–±–∞–≤–ª—è–µ–º NGINX_CONFIG_PATH –¥–ª—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
          NGINX_PATH="/home/${SSH_USER}/nginx_config/default.conf"
          echo "NGINX_CONFIG_PATH=${NGINX_PATH}" >> .env.prod
          echo "‚úì –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è NGINX_CONFIG_PATH=${NGINX_PATH}"
          
          # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.prod
          echo "üîç –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.prod..."
          set -a  # Automatically export all variables
          source .env.prod
          set +a  # Stop automatically exporting
          
          # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
          echo "üìã –°–ø–∏—Å–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
          cat .env.prod | grep -v '^#' | grep '=' | cut -d= -f1 | while read -r var_name; do
            if [ -n "$var_name" ]; then
              echo "‚úì $var_name"
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞
              printenv | grep -q "^$var_name=" && echo "  ‚ûú –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞" || echo "  ‚ûú –ù–ï —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ ‚ùå"
            fi
          done
          
          echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
      
      - name: Build and deploy with Docker Compose
        run: |
          echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ requirements.txt
          echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª requirements.txt:"
          grep -E "gunicorn|psycopg2" requirements.txt || echo "‚ö†Ô∏è –í requirements.txt –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–∞–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!"
          
          # –ó–∞–ø—É—Å–∫ —Å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Ñ–∞–π–ª–∞ .env.prod
          # –≠—Ç–æ –¥–≤–æ–π–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
          echo "üöÄ –ó–∞–ø—É—Å–∫ Docker Compose —Å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ —Ñ–∞–π–ª–æ–º .env.prod..."
          set -a
          source .env.prod
          set +a
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –∏ –¥–µ–ø–ª–æ–π
          docker compose --env-file .env.prod -f docker-compose.prod.yml build
          
          echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          docker compose --env-file .env.prod -f docker-compose.prod.yml up -d
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Django –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
          echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ Django:"
          docker compose --env-file .env.prod -f docker-compose.prod.yml exec app pip list | grep -E "gunicorn|psycopg2" || echo "‚ö†Ô∏è –í –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–∞–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã!"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          echo "üìã –õ–æ–≥–∏ Django –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
          docker compose --env-file .env.prod -f docker-compose.prod.yml logs --tail=20 app || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ app"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          echo "üìã –õ–æ–≥–∏ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
          docker compose --env-file .env.prod -f docker-compose.prod.yml logs --tail=20 nginx || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ nginx"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
          echo "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
          docker compose --env-file .env.prod -f docker-compose.prod.yml exec nginx cat /etc/nginx/conf.d/default.conf | head -10 || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx"
          
          echo "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}"
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          SSH_USER: ${{ secrets.SSH_USER }}
      
      - name: Cleanup
        run: |
          echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
          docker context use default
          docker context rm remote -f
          echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
